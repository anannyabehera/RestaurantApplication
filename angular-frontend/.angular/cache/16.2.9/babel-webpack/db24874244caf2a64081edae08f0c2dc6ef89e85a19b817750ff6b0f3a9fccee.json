{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrl = 'http://localhost:3550'; // Replace with your API URL\n    this.withCredential = {\n      withCredentials: true\n    };\n  }\n  register(user) {\n    console.log('service', user);\n    const registerUrl = `${this.apiUrl}/auth/register`;\n    return this.http.post(registerUrl, user);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","router","apiUrl","withCredential","withCredentials","register","user","console","log","registerUrl","post","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["E:\\ashok sir\\ResturantAppAngular\\ResturantApp\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:3550'; // Replace with your API URL\n  withCredential: object = {\n    withCredentials: true\n\n  }\n  constructor(private http: HttpClient,\n    private router: Router,) {}\n\n    register(user: any): Observable<any> {\n      console.log('service', user);\n      \n      const registerUrl = `${this.apiUrl}/auth/register`;\n      return this.http.post(registerUrl, user);\n    }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,WAAW;EAMtBC,YAAoBC,IAAgB,EAC1BC,MAAc;IADJ,KAAAD,IAAI,GAAJA,IAAI;IACd,KAAAC,MAAM,GAANA,MAAM;IANR,KAAAC,MAAM,GAAG,uBAAuB,CAAC,CAAC;IAC1C,KAAAC,cAAc,GAAW;MACvBC,eAAe,EAAE;KAElB;EAE2B;EAE1BC,QAAQA,CAACC,IAAS;IAChBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC;IAE5B,MAAMG,WAAW,GAAG,GAAG,IAAI,CAACP,MAAM,gBAAgB;IAClD,OAAO,IAAI,CAACF,IAAI,CAACU,IAAI,CAACD,WAAW,EAAEH,IAAI,CAAC;EAC1C;EAAC,QAAAK,CAAA,G;qBAdQb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXpB,WAAW;IAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}